(define right-hand
  (lambda (beat dur)
    (play piano
          (pc:quantize (cosr (+ root C2) (cosr 5 3 1/2) 7/3) scale)
          (cosr 160 20 7/3)
          (* 4.0 dur))
    (callback (*metro* (+ beat (* .5 dur))) 'right-hand (+ beat dur) dur)))

(right-hand (*metro* 'get-beat 4) 1/4)

(define bassline
  (lambda (beat ps ds)
    (play fmsynth root 100 (* (car ps) (car ds)) 1.0 0.5)
    (callback (*metro* (+ beat (* .95 (car ds)))) 'bassline (+ beat (car ds))
              (rotate ps -1)
              (rotate ds -1))))

(bassline (*metro* 'get-beat 4) (list .25 .25 .6) '(3/2 1 3/2))

(define right-hand
  (lambda (beat dur)
    (play piano
          (pc:quantize (cosr (+ root C2) (cosr 5 3 1/2) 7/3) scale)
          (cosr 160 20 7/3)
          (* 4.0 dur))
    (if (> (random) .6)
        (play fmsynth
              (pc:quantize (+ 7 (cosr (+ root 36) (cosr 5 3 1/2) 7/3)) scale)
              (cosr 75 20 7/3)
              (* .2 dur) 0.5 5.0))
    (callback (*metro* (+ beat (* .5 dur))) 'right-hand (+ beat dur) dur)))
