{erl_opts, [debug_info]}.

{deps, [
    {coers, {git, "https://github.com/erlsci/coers", {tag, "0.3.0"}}},
    {lfe, {git, "https://github.com/rvirding/lfe", {branch, "develop"}}},
    {logjam, {git, "https://github.com/lfex/logjam", {tag, "1.0.0-rc2"}}},
    {osc, {git, "https://github.com/erlsci/osc", {branch, "release/2.2.x"}}},
    {'tcp-client', {git, "https://github.com/lfex/tcp-client", {tag, "0.2.1"}}}
]}.

{plugins, [
    {rebar3_lfe, {git, "https://github.com/lfe-rebar3/rebar3_lfe", {branch, "release/0.3.x"}}}
]}.

{provider_hooks, [
    {pre, [
        {compile, {lfe, compile}}
    ]}
]}.

{xref_checks, [
    undefined_function_calls, undefined_functions, locals_not_used,
    deprecated_function_calls, deprecated_functions
]}.

{dialyzer, [
    {warnings, [unknown]}
]}.

{relx, [
    {release,
        {undertone, "0.3.0-dev"},
        [
            lfe,
            logjam,
            sasl,
            'undertone-lib',
            undertone
        ]},
    {sys_config, "./config/sys.config"},
    {vm_args, "./config/vm.args"},
    {dev_mode, true},
    {include_erts, false},
    {extended_start_script, true}
]}.

{profiles, [
    {test, [
        {deps, [
            {proper, {git, "https://github.com/proper-testing/proper", {tag, "v1.3"}}},
            {ltest, {git, "https://github.com/lfex/ltest", {tag, "0.11.0"}}}
        ]},
        {plugins, [
            {rebar3_proper, {git, "https://github.com/ferd/rebar3_proper", {tag, "0.12.0"}}}
        ]},
        {eunit_opts, [verbose]},
        {erl_opts, [
            {src_dirs, ["src", "test"]}
        ]}
    ]},
    {extempore, [
        {shell_args, [
            'tty_sl -c -e',{'undertone.repl.extempore', start, []}
        ]}
    ]},
    {prod, [
        [{relx, [{dev_mode, false},
                 {include_erts, true}]}]
    ]}
]}.

{alias, [
    {repl, [
        compile,
        {lfe, repl}
    ]},
    %% 
    {extempore, [
        compile,
        shell
    ]},
    {ltest, [
        compile,
        {lfe, ltest}
    ]},
    {coverage, [
        {proper, "-c"},
        {cover, "-v --min_coverage=0"}
    ]},
    {check, [
        compile,
        xref,
        %dialyzer,
        {lfe, ltest},
        coverage
    ]}
]}.